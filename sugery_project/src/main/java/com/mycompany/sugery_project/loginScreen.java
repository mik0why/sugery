/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.sugery_project;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Scanner;
import java.sql.*; 
import java.util.logging.Level;
import java.util.logging.Logger;
 /*
 * @author mikowhy
 */

public class loginScreen extends javax.swing.JFrame {
    //TODO needs a fix:  pressing the "Enter" button
    /**
     * Creates new form loginScreen
     */
    mainFrame mf; // TODO needs to be fixed (what exactly?)
    configJFrame jf = new configJFrame(); 
   
    ArrayList<User> usData = new ArrayList<User>(); // TODO: remove
    

    boolean focusTraversalKeysEnabled = false;
    @Override
    public void setFocusTraversalKeysEnabled(boolean focusTraversalKeysEnabled) {
        super.setFocusTraversalKeysEnabled(focusTraversalKeysEnabled); //To change body of generated methods, choose Tools | Templates.
    }
    //TODO should have a database field
    public loginScreen() {
        initComponents();
        loginButton.setBackground(Color.BLACK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loginButton = new javax.swing.JButton();
        passField = new javax.swing.JPasswordField();
        jScrollPane3 = new javax.swing.JScrollPane();
        logErrorField = new javax.swing.JTextArea();
        newUserButton = new javax.swing.JButton();
        userField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        loginButton.setBackground(new java.awt.Color(0, 0, 153));
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("login");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });
        loginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginButtonKeyPressed(evt);
            }
        });
        jPanel1.add(loginButton);
        loginButton.setBounds(364, 434, 62, 32);

        passField.setBackground(new java.awt.Color(0, 0, 0));
        passField.setForeground(new java.awt.Color(255, 255, 255));
        passField.setBorder(null);
        jPanel1.add(passField);
        passField.setBounds(364, 351, 287, 16);

        logErrorField.setEditable(false);
        logErrorField.setBackground(new java.awt.Color(0, 0, 0));
        logErrorField.setColumns(20);
        logErrorField.setForeground(new java.awt.Color(153, 153, 255));
        logErrorField.setLineWrap(true);
        logErrorField.setRows(1);
        logErrorField.setBorder(null);
        logErrorField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logErrorFieldKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(logErrorField);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(471, 524, 244, 43);

        newUserButton.setBackground(new java.awt.Color(0, 0, 0));
        newUserButton.setForeground(new java.awt.Color(255, 255, 255));
        newUserButton.setActionCommand("add new user");
        newUserButton.setLabel("create new user");
        newUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newUserButtonMouseClicked(evt);
            }
        });
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });
        newUserButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newUserButtonKeyPressed(evt);
            }
        });
        jPanel1.add(newUserButton);
        newUserButton.setBounds(444, 434, 147, 32);

        userField.setBackground(new java.awt.Color(0, 0, 0));
        userField.setForeground(new java.awt.Color(255, 255, 255));
        userField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        userField.setBorder(null);
        userField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFieldActionPerformed(evt);
            }
        });
        userField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userFieldKeyPressed(evt);
            }
        });
        jPanel1.add(userField);
        userField.setBounds(364, 283, 347, 16);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("forgot password?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(609, 434, 138, 32);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(324, 206, 28, 396);

        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("Username:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(370, 260, 71, 16);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setRequestFocusEnabled(false);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(364, 305, 347, 12);

        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setText("Password: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(364, 329, 71, 16);

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setRequestFocusEnabled(false);
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(364, 373, 347, 12);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app_images/logo-4.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 220, 300, 225);

        jLabel5.setIcon(new javax.swing.ImageIcon("/Users/mikowhy/Documents/Informatyka/Side Projects/Java/Sugery/sugery/sugery_project/src/main/resources/assorted-color-of-plastic-1809341.png")); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 10, 370, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void userFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==9){
            passField.requestFocus();
        }else if(evt.getKeyCode()==13){
            passField.requestFocusInWindow();
        }
    }//GEN-LAST:event_userFieldKeyPressed

    private void userFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userFieldActionPerformed

    private void newUserButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUserButtonKeyPressed
        if(evt.getKeyCode()==13){
            jf.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_newUserButtonKeyPressed

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed
        jf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_newUserButtonActionPerformed

    private void newUserButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newUserButtonMouseClicked
        // creating a new user
        jf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_newUserButtonMouseClicked

    private void logErrorFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logErrorFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==9){
            loginButton.requestFocus();
        }
    }//GEN-LAST:event_logErrorFieldKeyPressed

    private void loginButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginButtonKeyPressed
        // TODO rearrange bc redundant
        if(userField.getText().isEmpty() || passField.getPassword().length == 0){
            logErrorField.setText("no login / password entered!"); // can extend to show which one
        }else{
            try {
                loginAttempt(userField.getText(), passField.getPassword());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(loginScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(loginScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loginButtonKeyPressed

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
        //should rearrange this just to be loginAttempt();

        String username = userField.getText();
        char[] password = passField.getPassword();
        if(username.isEmpty() || password.length == 0){
            logErrorField.setText("no login or password entered!"); // can extend to show which one
        }else{
            try {
                loginAttempt(username, password);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(loginScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(loginScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loginButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginScreen().setVisible(true);
            }
        });
    }
    private void loginAttempt(String login, char[] password) throws ClassNotFoundException, SQLException{
        boolean usrFound = false;
        int usrIdx = 0; //TODO: 0 for now, might be changed 
        // condition to check if login and password match entries in db
        // validate - check if reasonable, verify - check if accurate
        try{
            Class.forName("com.mysql.cj.jdbc.Driver"); // is it necessary?
            String url = "jdbc:mysql://localhost/LOG?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"; 
            Connection conn = DriverManager.getConnection(url,"root","Pass123!!!"); 
            Statement st = conn.createStatement();
            String sql = "SELECT username, password FROM LoginData";
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){ // TODO shouldn't it be select from where?
                String username = rs.getString("username");
                String us_pass = rs.getString("password");
                if(username.equals(login) && us_pass.equals(String.copyValueOf(password))){
                    usrFound = true; 
                    }
                }
            }catch(Exception e){
                System.out.println("Exception: " + e);
        }
        if(usrFound){ 
            mf = new mainFrame(fetchUser(userField.getText())); // instead of user; TODO change the method definition; old: get user from db (TODO change which one)
            this.setVisible(false);
            mf.setVisible(true);
            mf.displayUserData(usData, usrIdx); // replace with proper arguments (TODO change the parameter)
            
            
           /* usData.add(new User(login, 22, 100)); // get rid of
            mf = new mainFrame(usData.get(usrIdx)); //TODO change the method definition; old: get user from db (TODO change which one)
            mf.setVisible(true);
            mf.displayUserData(usData, usrIdx); // replace with proper arguments (TODO change the parameter)
            this.setVisible(false); */
            
            
            
        }else{ // no user found in the database
                logErrorField.setText("Incorrect username or password :(");
        }
    }
    
    public User fetchUser(String username){ // Connect to the Database.  Fetch the details relevant to the user
     String user = ""; 
     int age = Integer.MIN_VALUE; 
     int goal = Integer.MIN_VALUE;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver"); // is it necessary?
            String url = "jdbc:mysql://localhost/LOG?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"; 
            Connection conn = DriverManager.getConnection(url,"root","Pass123!!!"); 
            Statement st = conn.createStatement();
            String sql = "SELECT * FROM UserData WHERE username = '" + username + "';";
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            user = rs.getString("username");
            age = rs.getInt("age");
            goal = rs.getInt("goal");
            System.out.println("User-2 : " + user + " age: " + age + " goal : " + goal);
            }catch(Exception e){
                System.out.println("Exception: " + e);
        }
        
        return new User(user, age, goal); // TODO change
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea logErrorField;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton newUserButton;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
}
            
            
            
            // find the user in the al 
            /* TODO: commented for now, might be used
            for (User us : usData){ // need to always access the same al
                System.out.println(us.first);
                if(login.equals(us.first)){ //todo one user with one name
                    usrIdx = usData.indexOf(login); 
                    System.out.println(usrIdx); 
                    // check if name already exists
                }
                // find the corresponding user
                
            }*/